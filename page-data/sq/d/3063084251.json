{"data":{"allMarkdownRemark":{"edges":[{"node":{"rawMarkdownBody":"\n<div><h1>Author Checklist:<br>Publishing your data</h1></div>\n\n---\n\n<h2> Identify a publicly accessible repository for your data </h2>\n\nThis could be a general, non-curated repository such as Figshare or a curated, domain-specific one such Pangaea or Hydroshare. \n\n<h3>Why is this important? </h3>\n\nSharing your data in publically accessible repository enables other (and yourself) researchers to use your original data for reprocublity and replicability studies or extend your findings. \n\n---\n\n<h2> Fill out the needed metadata, including the license </h2>\n\nMost repositories will guide you through the process, including any specific mandatory fields.  \n\nDon't forget to add a license. Here is a quick guide about commonly-used licenses: https://chooser-beta.creativecommons.org \n\n<h3>Why is this important? </h3>\n\nAdding the proper metadata ensures maximum reuse of your data in other studies. \n\nLicenses indicate the terms and conditions under which your data can be used. Make sure that you choose a license appropriate given the funding agency. \n\n---\n\n<h2> Upload the data </h2>\n\nIf you are working with large datasets, make sure that the repository can accommodate them. For instance, Figshare only allows files with a maximum size of 20GB. \n\n---\n\n<h2> Enable citation of the data </h2>\n\nThe citation should include a unique persistent identifier for the data. \n\n<h3>Why is this important? </h3>\n\nCitations help you get recognized for all of your work. Additionaly, it is an integral part of reproducibility since it can give information about the provenance of the data. \n\n---\n\n<h2> Citing  Data in your paper </h2>\n\n- Citation goes in the references section\n- Guidelines on how to cite data are often set by the journal but includes an in-text pointer as you would cite any other paper (recommended), an in-text pointer in a Data Resources section, an in-text pointer in the \"Acknowledgements\" section. \n\n---\n\n","fields":{"slug":"/chapter4_01_data"}}},{"node":{"rawMarkdownBody":"\n<div><h1>Author Checklist:<br>Publishing your workflow</h1></div>\n\n---\n\n<h2> Identify a publicly accessible repository</h2>\n\nIf your workflow is sketched but you are not planning to provide an executable version, the best option is Figshare or Zenodo and treat the sketch as data.\n\nIf you are planning to provide an executable workflow, several options are available:\n1. Provide an electronic Notebook. Make sure to indicate any manual steps in the text narrative of the notebook.\n2. Provide a series of scripts. In this case, make sure you have a \"read me\" file that describes in which order to execute and what are the expected output of each script. \nIn both cases, a sketch of the workflow could still be useful and should be shared in the same repository as the executable workflow. There are several options but a popular one is Github, which allows for many developers to work together and has verion control.\n\n<h3>Why is this important? </h3>\n\nSharing your workflow in publically accessible repository enables other (and yourself) researchers to use your original workflow for reprocublity and replicability studies or apply it to other studies. \n\nVersion control allows to easily track changes in the workflow (made by you or other collaborators), and rolls back to a prior stable version if needed or runs continous integration to ensure that introduced changes are still giving proper results. Many platforms, including GitHub, provide other collaboration tools such as issue tracker and project management tools that you will learn to use in subsequent modules. \n\n---\n\n<h2> Provide enough metadata for reuse, including a licence and your conmputational environment </h2>\n \nTo share your computational environment, you can either list the libraries in a \"read me\" file. \n\n<h3>Why is this important? </h3>\n\nThe license identifies the rules and conditions under which your workflow can be reused by others. Some of the most used licences for open-source project are the Apache 2.0 and MIT licenses. These licenses are permissive, meaning that they have few restrictions to allow others to reuse your work. You can use this website to help you choose a license: https://choosealicense.com.\n\nIf you are using GitHub, use the following to add a license to your repository: https://docs.github.com/en/communities/setting-up-your-project-for-healthy-contributions/adding-a-license-to-a-repository \n\nIn the case of executable workflows, sharing your computational environment, and in particular the version of the packages, is critical to long-term reproducbility. Five years from now, a particular library could change its default behavior, resulting in differing results.\n\n---\n\n<h2> [Optional] Making your workflow executable</h2>\n\nFor full reproducibility, you may want to consider sharing your workflow in a Docker container or through Binder (e.g., you can use myBinder)\n\n<h3>Why is this important? </h3>\n\nBuilding environment from a list of libraries may become tricky a few years from when the workflow was created. Docker containers make it easier for others to reproduce your work.  \n\n\n---\n\n<h2> Enable citation of the workflow</h2>\n\nThe citation should include a unique persistent identifier for the workflow. If using a sketch publicly available on a general-purpose repository such as Figshare, you will obtain a permanent unique identifier from them.  Most software repositories (including GitHub), which might be more appropriate for executable workflows, do not mint DOIs directly. One option is to link your GitHub repository to Zenodo to obtain a DOI for each version of your workflow upon release. \n\nIn most cases, you will have to provide a citation for your workflow. To do so, you can use CodeMeta (https://codemeta.github.io/) and the Citation File Format (https://citation-file-format.github.io/). In each case, a plain text file (CITATION.cff) is added to your repository. When you link your GitHub repository with Zenodo, the content of the CITATION.cff file is used to generate the citation in combination with the minted DOI from Zenodo. \n\n<h3>Why is this important? </h3>\n\nCitation helps you get credit for all of your research. \n\n---\n\n<h2> Citing the workflow in your paper </h2>\n\nIf using a sketch for your workflow, you can include the figure directly into the manusctipt in the methods section or in supplementary information. \n\nFor executable workflows, you can treat it as software:\n- Citation goes in the references section\n- Guidelines on how to cite software are often set by the journal but includes an in-text pointer as you would cite any other paper (recommended), an in-text pointer in a \"Data Resources\" or \"Open Science\" section, an in-text pointer in the \"Acknowledgements\" section. \n\nYou may combine sketch and executable workflows to ensure that your study is reproducible. \n\n---\n\n","fields":{"slug":"/chapter4_03_workflow"}}},{"node":{"rawMarkdownBody":"\n<div><h1>Author Checklist:<br>Publishing your software</h1></div>\n\n---\n\n<h2> Identify a publicly accessible repository with version control </h2>\n\nThere are several options but a popular one is Github, which allows for many developers to work together and has verion control. \n\n<h3>Why is this important? </h3>\n\nSharing your software in publically accessible repository enables other (and yourself) researchers to use your original software for reprocublity and replicability studies or apply it to other studies. \n\nVersion control allows to easily track changes in the software (made by you or other collaborators), and rolls back to a prior stable version if needed or runs continous integration to ensure that introduced changes are still giving proper results. Many platforms, including GitHub, provide other collaboration tools such as issue tracker and project management tools that you will learn to use in subsequent modules. \n\n---\n\n<h2> Provide enough metadata for reuse, including a licence </h2>\n\n<h3>Why is this important? </h3>\n\nThe license identifies the rules and conditions under which your software can be reused by others.  \n\nSome of the most used licences for open-source project are the Apache 2.0 and MIT licenses. These licenses are permissive, meaning that they have few restrictions to allow others to reuse your work. You can use this website to help you choose a license: https://choosealicense.com.\n\nIf you are using GitHub, use the following to add a license to your repository: https://docs.github.com/en/communities/setting-up-your-project-for-healthy-contributions/adding-a-license-to-a-repository \n\n---\n\n<h2> Register your code in a community registry </h2>\n\nSome registries are language specific (e.g., PyPi for Python and CRAN for R). Others are cross-language, but may be dedicated to a scientific domain (e.g., Hydroshare, DesignSafe)\n\n<h3>Why is this important? </h3>\n\nThe registry provides more visibility for your work by adding metadata to your package. In some instances, it makes it easier to install your package. \n\n\n---\n\n<h2> Enable citation of the Software </h2>\n\nThe citation should include a unique persistent identifier for the software. Most software repositories (including GitHub) do not mint DOIs directly. One option is to link your GitHub repository to Zenodo to obtain a DOI for each version of your software upon release. \n\nIn most cases, you will have to provide a citation for your software. To do so, you can use CodeMeta (https://codemeta.github.io/) and the Citation File Format (https://citation-file-format.github.io/). In each case, a plain text file (CITATION.cff) is added to your repository. When you link your GitHub repository with Zenodo, the content of the CITATION.cff file is used to generate the citation in combination with the minted DOI from Zenodo. \n\n<h3>Why is this important? </h3>\n\nCitation helps you get credit for all of your research. More cricitally, software citation should always include a version of the software used in the work for reproducibility. \n\n---\n\n<h2> Citing  software in your paper </h2>\n\n- Citation goes in the references section\n- Guidelines on how to cite software are often set by the journal but includes an in-text pointer as you would cite any other paper (recommended), an in-text pointer in a \"Data Resources\" or \"Open Science\" section, an in-text pointer in the \"Acknowledgements\" section. \n\n---\n\n","fields":{"slug":"/chapter4_02_software"}}}]}}}